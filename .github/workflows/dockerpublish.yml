name: Docker

on:
  push:
    branches: [ "master" ]
  schedule:
    - cron: '0 22 1 * *'

env:
  IMAGE_NAME: netatmo-energy-exporter
  REGISTRY: ghcr.io

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
        id: go
      - uses: actions/checkout@v4
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
           curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
           dep ensure
          fi
      - name: Build
        run: go build -v .
      - name: Run docker tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi
  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1
        with:
          fail_on_error: true
          golangci_lint_flags: "--config=.github/.golangci.yml ."
  push:
    needs: [test, golangci-lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Github container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: | 
            ghcr.io/vremenar/netatmo-energy-exporter:latest
            ghcr.io/vremenar/netatmo-energy-exporter:${{ steps.date.outputs.date }}
            vremenar/netatmo-energy-exporter:latest
            vremenar/netatmo-energy-exporter:${{ steps.date.outputs.date }}
      #- name: Build image
      #  run: docker build . --file Dockerfile --tag image
      #- name: Log into registry
      #  run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      #- name: Push image
      #  run: |
      #    IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME      
      #    # Change all uppercase to lowercase
      #    IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
      #    # Strip git ref prefix from version
      #    VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #    # Strip "v" prefix from tag name
      #    [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      #    # Use Docker `latest` tag convention
      #    [ "$VERSION" == "master" ] && VERSION=latest
      #    echo IMAGE_ID=$IMAGE_ID
      #    echo VERSION=$VERSION
      #    docker tag image $IMAGE_ID:$VERSION
      #    docker push $IMAGE_ID:$VERSION
